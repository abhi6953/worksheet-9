Python worksheet 9 
Answers

1. option B
2. option D
3. option D
4. option B
5. option C
6. option C
7. option B
8. option C,D
9. option A,C,D
10. option A,C

11.
Lists: are just like dynamic sized arrays, declared in other languages (vector in C++ and ArrayList in Java). 
Lists need not be homogeneous always which makes it a most powerful tool in Python.

Tuple: A Tuple is a collection of Python objects separated by commas. 
In someways a tuple is similar to a list in terms of indexing, nested objects and repetition but a tuple is immutable unlike lists that are mutable.

Set: A Set is an unordered collection data type that is iterable, mutable and has no duplicate elements. 
Python’s set class represents the mathematical notion of a set.

Dictionary: in Python is an unordered collection of data values, used to store data values like a map, which unlike other Data Types that hold only single value as an element, Dictionary holds key:value pair. 
Key value is provided in the dictionary to make it more optimized.

List, Tuple, Set, and Dictionary are the data structures in python that are used to store and organize the data in an efficient manner.

12.
Mutable Definition-Mutable is when something is changeable or has the ability to change. In Python, ‘mutable’ is the ability of objects to change their values. These are often the objects that store a collection of data.
Strings are immutable so we can't change its value. But the contents of the list can change. The tuple itself isn't mutable but contain items that are mutable.

13.
The Python ord() method returns the Unicode code of a specific character. This value is represented as a number. 
You can only use the ord() method on a single character at one time.

For example, say you want to check if each character in a string includes a special character. 
You could use ord() to do this.

The Python ord() function accepts one argument: the character whose Unicode code value you want to retrieve. 
The function returns an integer representing the Unicode code value of the character you have passed into the function.
Say that we are creating a reference application that makes it easy for high school computer science students to learn Unicode. 
Our program takes in one character and returns the Unicode code value of that character. Here’s the code we could use to make such a program:

character = input("The character you want to convert to Unicode")

unicode_value = ord(character)

print("The Unicode value of the character", character, "is", str(unicode_value))
When we run our code and insert the value K (uppercase) whose Unicode code point we want to retrieve, we receive the following output:

What character do you want to convert to Unicode?
K
The Unicode value of the character K is 75.
On the first line of code, we use the Python input() function to request a character to convert into its Unicode code value. 
Then, on the next line, we use ord() to convert the user’s input into its Unicode object value.

14.
Standard form is
ax2 + bx + c = 0, where
a, b and c are real numbers and
a ≠ 0

solution is
(-b ± (b ** 2 - 4 * a * c) ** 0.5) / 2 * a

code is:
import cmath

a = 1
b = 5
c = 6

# calculate the discriminant
d = (b**2) - (4*a*c)

# find two solutions
sol1 = (-b-cmath.sqrt(d))/(2*a)
sol2 = (-b+cmath.sqrt(d))/(2*a)

print('The solution are {0} and {1}'.format(sol1,sol2))

15. 
n = int(input("Enter number"))
sum = 0
# loop from 1 to n
for num in range(1, n + 1, 1):
    sum = sum + num
print("Sum of first ", n, "numbers is: ", sum)
average = sum / n
print("Average of ", n, "numbers is: ", average)
